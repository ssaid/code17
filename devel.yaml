version: "2.4"

services:
  odoo_proxy:
    image: ghcr.io/tecnativa/docker-whitelist:latest
    depends_on:
      - odoo
    networks: &public
      default:
      public:
    ports:
      - "127.0.0.1:17899:6899"
      - "127.0.0.1:17069:8069"
      - "127.0.0.1:17072:8072"
    environment:
      PORT: "6899 8069 8072"
      TARGET: odoo

  code-server:
    image: lscr.io/linuxserver/code-server:latest
    labels:
      - traefik.http.routers.code17editor.rule=Host(`code17-editor.said.ar`)
      - traefik.enable=true
      - traefik.docker.network=inverseproxy_shared
      - traefik.http.routers.code17editor.entrypoints=websecure
      - traefik.http.routers.code17editor.tls.certResolver=letsencrypt
      - traefik.http.services.code17editor.loadbalancer.server.port=8443
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC-3
      - PASSWORD=password #optional
      #      - HASHED_PASSWORD= #optional
      - SUDO_PASSWORD=password #optional
      #      - SUDO_PASSWORD_HASH= #optional
      #      - PROXY_DOMAIN=code-server.my.domain #optional
      - DEFAULT_WORKSPACE=/config/workspace #optional
    volumes:
      - ./:/config/workspace
    ports:
      - 8443:8443
    restart: unless-stopped
    networks:
      default:
      inverseproxy_shared:

  odoo:
    extends:
      file: common.yaml
      service: odoo
    build:
      args:
        # To aggregate in development, use `setup-devel.yaml`
        AGGREGATE: "false"
        # Export these variables to own files created by odoo in your filesystem
        UID: "${UID:-1000}"
        GID: "${GID:-1000}"
        # No need for this in development
        PIP_INSTALL_ODOO: "false"
        CLEAN: "false"
        COMPILE: "false"
    environment:
      DOODBA_ENVIRONMENT: "${DOODBA_ENVIRONMENT-devel}"
      LIST_DB: "true"
      DEBUGPY_ENABLE: "${DOODBA_DEBUGPY_ENABLE:-0}"
      PGDATABASE: &dbname devel
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONOPTIMIZE: ""
      PYTHONPATH: /opt/odoo/custom/src/odoo
      SMTP_PORT: "1025"
      WDB_WEB_PORT: "17984"
      # To avoid installing demo data export DOODBA_WITHOUT_DEMO=all
      WITHOUT_DEMO: "${DOODBA_WITHOUT_DEMO-false}"
    labels:
      - traefik.http.routers.code17odoo.rule=Host(`code17.said.ar`)
      - traefik.enable=true
      - traefik.docker.network=inverseproxy_shared
      - traefik.http.routers.code17odoo.entrypoints=websecure
      - traefik.http.routers.code17odoo.tls.certResolver=letsencrypt
      - traefik.http.services.code17odoo.loadbalancer.server.port=8069
    volumes:
      - ./odoo/custom:/opt/odoo/custom:ro,z
      - ./odoo/auto:/opt/odoo/auto:rw,z
    depends_on:
      - db
      - proxy_cdnjs_cloudflare_com
      - proxy_fonts_googleapis_com
      - proxy_fonts_gstatic_com
      - proxy_www_google_com
      - proxy_www_googleapis_com
      - proxy_www_gravatar_com
      - smtp
      - wdb
    command:
      - odoo
      - --limit-memory-soft=0
      - --limit-time-real-cron=9999999
      - --limit-time-real=9999999
      - --workers=0
      - --dev=reload,qweb,werkzeug,xml

  db:
    extends:
      file: common.yaml
      service: db
    environment:
      POSTGRES_DB: *dbname
      POSTGRES_PASSWORD: odoopassword

  pgweb:
    image: docker.io/sosedoff/pgweb
    networks: *public
    ports:
      - "127.0.0.1:17081:8081"
    environment:
      DATABASE_URL: postgres://odoo:odoopassword@db:5432/devel?sslmode=disable
    depends_on:
      - db

  smtp:
    extends:
      file: common.yaml
      service: smtpfake
    networks: *public
    ports:
      - "127.0.0.1:17025:8025"

  wdb:
    image: docker.io/kozea/wdb
    networks: *public
    ports:
      - "127.0.0.1:17984:1984"
    # HACK https://github.com/Kozea/wdb/issues/136
    init: true

  # Whitelist outgoing traffic for tests, reports, etc.
  proxy_cdnjs_cloudflare_com:
    image: ghcr.io/tecnativa/docker-whitelist:latest
    networks:
      default:
        aliases:
          - cdnjs.cloudflare.com
      public:
    environment:
      TARGET: cdnjs.cloudflare.com
      PRE_RESOLVE: 1

  proxy_fonts_googleapis_com:
    image: ghcr.io/tecnativa/docker-whitelist:latest
    networks:
      default:
        aliases:
          - fonts.googleapis.com
      public:
    environment:
      TARGET: fonts.googleapis.com
      PRE_RESOLVE: 1

  proxy_fonts_gstatic_com:
    image: ghcr.io/tecnativa/docker-whitelist:latest
    networks:
      default:
        aliases:
          - fonts.gstatic.com
      public:
    environment:
      TARGET: fonts.gstatic.com
      PRE_RESOLVE: 1

  proxy_www_google_com:
    image: ghcr.io/tecnativa/docker-whitelist:latest
    networks:
      default:
        aliases:
          - www.google.com
      public:
    environment:
      TARGET: www.google.com
      PRE_RESOLVE: 1

  proxy_www_googleapis_com:
    image: ghcr.io/tecnativa/docker-whitelist:latest
    networks:
      default:
        aliases:
          - www.googleapis.com
      public:
    environment:
      TARGET: www.googleapis.com
      PRE_RESOLVE: 1

  proxy_www_gravatar_com:
    image: ghcr.io/tecnativa/docker-whitelist:latest
    networks:
      default:
        aliases:
          - www.gravatar.com
      public:
    environment:
      TARGET: www.gravatar.com
      PRE_RESOLVE: 1

networks:
  default:
    internal: ${DOODBA_NETWORK_INTERNAL-true}
  public:
  inverseproxy_shared:
    external: true

volumes:
  filestore:
  db:
